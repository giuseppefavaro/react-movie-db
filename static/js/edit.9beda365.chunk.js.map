{"version":3,"file":"static/js/edit.9beda365.chunk.js","mappings":"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","sources":["webpack://react-movie-db/./src/components/CardItem/styles.module.scss?af11","components/CardItem/index.jsx","webpack://react-movie-db/./src/components/CreateCardForm/styles.module.scss?5186","components/CreateCardForm/index.js","webpack://react-movie-db/./src/pages/EditMovie/styles.module.scss?8226","pages/EditMovie/index.jsx","utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CardItem\":\"styles_CardItem__QIsX0\",\"CardItem__btn\":\"styles_CardItem__btn__kdQps\",\"CardItem__title\":\"styles_CardItem__title__8Xi6k\",\"CardItem__poster\":\"styles_CardItem__poster__rmHcN\",\"CardItem__year\":\"styles_CardItem__year__h+SSP\",\"CardItem__description\":\"styles_CardItem__description__S7gMY\",\"CardItem__genre\":\"styles_CardItem__genre__oqVv8\"};","\nimport { Link } from \"react-router-dom\";\nimport { DELETE } from \"../../utils\";\n\nimport styles from \"./styles.module.scss\";\n\n\nconst CardItem = ({ cardData, btnDeleteHidden  }) => {\n\n\n    const onCardDelete = () => {\n        DELETE(cardData.id).then( (data) => window.location.reload(\"/\"));\n    }\n\n    return (\n        \n        <article className={styles.CardItem}>\n            <img className={styles.CardItem__poster} src={cardData.poster} alt={cardData.title} />\n            <Link to={`/edit-movie/${cardData.id}`}>\n                <h2 className={styles.CardItem__title}>{cardData.title}</h2>\n            </Link>\n            <p className={styles.CardItem__year}>{cardData.year}</p>\n            <p className={styles.CardItem__description}>{cardData.description}</p>\n            <div className={styles.CardItem__genre}>\n                <ul>\n                    { Array.isArray(cardData.genres) &&\n                    cardData.genres.map((genre, index) => (\n                    <li key={index}>{genre}</li>\n                    ))}\n                </ul>\n\n                { btnDeleteHidden ? \"\" : <button onClick={onCardDelete} className={styles.CardItem__btn}></button>}\n            </div>\n        </article>\n      );\n}\n\nexport default CardItem;","// extracted by mini-css-extract-plugin\nexport default {\"CreateCardForm\":\"styles_CreateCardForm__j0Ueu\",\"CreateCardForm__form\":\"styles_CreateCardForm__form__TAs8d\",\"CreateCardForm__form__input\":\"styles_CreateCardForm__form__input__oFhm+\",\"CreateCardForm__form__textarea\":\"styles_CreateCardForm__form__textarea__A6usH\",\"CreateCardForm__form__btn\":\"styles_CreateCardForm__form__btn__J64nt\"};","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { POST, PUT } from \"../../utils\"\nimport styles from \"./styles.module.scss\"\n\n\n\nconst CreateCardForm = ({setModalVisibility, callType, completeCallback, text, movieData}) => {\n\n\n    const [title, setTitle] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [poster, setPoster] = useState(\"\");\n    const [genres, setGenres] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    \n    useEffect(() => {\n      if (movieData) {\n        setTitle(movieData.title);\n        setYear(movieData.year);\n        setPoster(movieData.poster);\n        setGenres(movieData.genres);\n        setDescription(movieData.description);\n      }\n    }, [movieData]);\n    \n\n    const genresInArr = (genres) => {\n      // from edit page\n      if (Array.isArray(genres)) {\n          return genres;\n      } else { \n        return genres.split(\",\");\n       }\n    }\n    \n\n    const location = useLocation();\n    const movieId = location.pathname.split(\"/\").reverse()[0];\n\n\n\n    const addMovie = async (e) => {\n        e.preventDefault();\n\n        if (callType === \"POST\") {\n          await POST({\n            title,\n            year,\n            poster,\n            genres: genresInArr(genres),\n            description,\n          });\n          \n          setModalVisibility(true);\n\n          completeCallback();\n\n\n        } else {\n          \n         await PUT(movieId, {\n            title,\n            year,\n            poster,\n            genres: genresInArr(genres),\n            description,\n          });\n\n          completeCallback();\n  \n        }\n\n    }\n\n\n\n      \n    return (\n        \n        <main className={styles.CreateCardForm}>\n\n        <h1>{text}</h1>\n    \n          <form onSubmit={addMovie} className={styles.CreateCardForm__form}>\n\n            <div className={styles.CreateCardForm__form__input}>\n              <label htmlFor=\"title\">Title:</label>\n              <input value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" id=\"title\" name=\"title\" required />\n            </div>\n            <div className={styles.CreateCardForm__form__input}>\n              <label htmlFor=\"year\">Year:</label>\n              <input value={year} onChange={(e) => setYear(e.target.value)} type=\"text\" id=\"year\" name=\"year\" required />\n            </div>\n            <div className={styles.CreateCardForm__form__input}>\n              <label htmlFor=\"poster\">Poster:</label>\n              <input value={poster} onChange={(e) => setPoster(e.target.value)} type=\"text\" id=\"poster\" name=\"poster\" required />\n            </div>\n            <div className={styles.CreateCardForm__form__input}>\n              <label htmlFor=\"genres\">Genres:</label>\n              <input value={genres} onChange={(e) => setGenres(e.target.value)} type=\"text\" id=\"genres\" name=\"genres\" required />\n            </div>\n            <div className={styles.CreateCardForm__form__textarea}>\n              <label htmlFor=\"description\">Description:</label>\n              <textarea value={description} onChange={(e) => setDescription(e.target.value)} id=\"description\" name=\"description\" required></textarea>\n            </div>\n            <div className={styles.CreateCardForm__form__btn}>\n              <input type=\"submit\" value={text} />\n            </div>\n\n          </form>\n            {/* <button onClick={() => console.log(title, year, poster, genres, description )}>Test</button> */}\n            \n        </main>\n      );\n}\n\nexport default CreateCardForm;","// extracted by mini-css-extract-plugin\nexport default {\"EditMovie\":\"styles_EditMovie__0ZtzC\",\"EditMovie__left\":\"styles_EditMovie__left__KDdcr\"};","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { GET } from \"../../utils\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport CardItem from \"../../components/CardItem\";\nimport CreateCardForm from \"../../components/CreateCardForm\";\nimport styles from \"./styles.module.scss\";\n\nfunction EditMovie(props) {\n\n  //console.log(props);\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const [movieData, setMovieData] = useState({});\n  const movieId = location.pathname.split(\"/\").reverse()[0];\n\n  useEffect(() => {\n    GET(movieId).then((data) => setMovieData(data));\n\n    // eslint-disable-next-line\n  }, []);\n\n\n  const completeCallback = () => {\n    // console.log(\"ok, modificato\");\n\n    props.editSuccess();\n  \n    navigate(\"/\");\n  };\n\n\n\n  return (\n    <div className={styles.EditMovie}>\n      <div className={styles.EditMovie__left}>\n        <CardItem cardData={movieData} btnDeleteHidden={true} />\n      </div>\n      <div className={styles.EditMovie__right}>\n        <CreateCardForm completeCallback={completeCallback} text=\"Edit movie\" movieData={movieData} />\n      </div>\n    </div>\n  );\n}\n\nexport default EditMovie;","const BASE_URL = \"https://edgemony-backend.herokuapp.com/movies\";\n\n// GET\nconst GET = (id = \"\") => fetch(`${BASE_URL}/${id}`).then((res) => res.json());\n\n// POST\nconst POST = (body) =>\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n// DELETE\nconst DELETE = (id) => fetch(`${BASE_URL}/${id}`, { method: \"DELETE\" });\n\n// PUT\nconst PUT = (id, body) =>\n  fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\nexport { GET, POST, DELETE, PUT };"],"names":["cardData","btnDeleteHidden","className","styles","src","poster","alt","title","to","id","year","description","Array","isArray","genres","map","genre","index","onClick","DELETE","then","data","window","location","reload","setModalVisibility","callType","completeCallback","text","movieData","useState","setTitle","setYear","setPoster","setGenres","setDescription","useEffect","genresInArr","split","movieId","useLocation","pathname","reverse","addMovie","e","preventDefault","POST","PUT","onSubmit","htmlFor","value","onChange","target","type","name","required","props","navigate","useNavigate","setMovieData","GET","CardItem","CreateCardForm","editSuccess","BASE_URL","fetch","res","json","body","method","headers","JSON","stringify"],"sourceRoot":""}