{"version":3,"file":"static/js/add.8b9918a6.chunk.js","mappings":"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","sources":["webpack://react-movie-db/./src/components/CreateCardForm/styles.module.scss?5186","components/CreateCardForm/index.js","webpack://react-movie-db/./src/components/Modal/styles.module.scss?81d3","components/Modal/index.jsx","webpack://react-movie-db/./src/pages/AddMovie/styles.module.scss?5bde","pages/AddMovie/index.jsx","utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CreateCardForm\":\"styles_CreateCardForm__j0Ueu\",\"CreateCardForm__form\":\"styles_CreateCardForm__form__TAs8d\",\"CreateCardForm__form__input\":\"styles_CreateCardForm__form__input__oFhm+\",\"CreateCardForm__form__textarea\":\"styles_CreateCardForm__form__textarea__A6usH\",\"CreateCardForm__form__btn\":\"styles_CreateCardForm__form__btn__J64nt\"};","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { POST, PUT } from \"../../utils\"\nimport styles from \"./styles.module.scss\"\n\n\n\nconst CreateCardForm = ({setModalVisibility, callType, completeCallback, text, movieData}) => {\n\n\n    const [title, setTitle] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [poster, setPoster] = useState(\"\");\n    const [genres, setGenres] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    \n    useEffect(() => {\n      if (movieData) {\n        setTitle(movieData.title);\n        setYear(movieData.year);\n        setPoster(movieData.poster);\n        setGenres(movieData.genres);\n        setDescription(movieData.description);\n      }\n    }, [movieData]);\n    \n\n    const genresInArr = (genres) => {\n      // from edit page\n      if (Array.isArray(genres)) {\n          return genres;\n      } else { \n        return genres.split(\",\");\n       }\n    }\n    \n\n    const location = useLocation();\n    const movieId = location.pathname.split(\"/\").reverse()[0];\n\n\n\n    const addMovie = async (e) => {\n        e.preventDefault();\n\n        if (callType === \"POST\") {\n          await POST({\n            title,\n            year,\n            poster,\n            genres: genresInArr(genres),\n            description,\n          });\n          \n          setModalVisibility(true);\n\n          completeCallback();\n\n\n        } else {\n          \n         await PUT(movieId, {\n            title,\n            year,\n            poster,\n            genres: genresInArr(genres),\n            description,\n          });\n\n          completeCallback();\n  \n        }\n\n    }\n\n\n\n      \n    return (\n        \n        <main className={styles.CreateCardForm}>\n\n        <h1>{text}</h1>\n    \n          <form onSubmit={addMovie} className={styles.CreateCardForm__form}>\n\n            <div className={styles.CreateCardForm__form__input}>\n              <label htmlFor=\"title\">Title:</label>\n              <input value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" id=\"title\" name=\"title\" required />\n            </div>\n            <div className={styles.CreateCardForm__form__input}>\n              <label htmlFor=\"year\">Year:</label>\n              <input value={year} onChange={(e) => setYear(e.target.value)} type=\"text\" id=\"year\" name=\"year\" required />\n            </div>\n            <div className={styles.CreateCardForm__form__input}>\n              <label htmlFor=\"poster\">Poster:</label>\n              <input value={poster} onChange={(e) => setPoster(e.target.value)} type=\"text\" id=\"poster\" name=\"poster\" required />\n            </div>\n            <div className={styles.CreateCardForm__form__input}>\n              <label htmlFor=\"genres\">Genres:</label>\n              <input value={genres} onChange={(e) => setGenres(e.target.value)} type=\"text\" id=\"genres\" name=\"genres\" required />\n            </div>\n            <div className={styles.CreateCardForm__form__textarea}>\n              <label htmlFor=\"description\">Description:</label>\n              <textarea value={description} onChange={(e) => setDescription(e.target.value)} id=\"description\" name=\"description\" required></textarea>\n            </div>\n            <div className={styles.CreateCardForm__form__btn}>\n              <input type=\"submit\" value={text} />\n            </div>\n\n          </form>\n            {/* <button onClick={() => console.log(title, year, poster, genres, description )}>Test</button> */}\n            \n        </main>\n      );\n}\n\nexport default CreateCardForm;","// extracted by mini-css-extract-plugin\nexport default {\"Modal\":\"styles_Modal__xboJ2\",\"Modal__text\":\"styles_Modal__text__vHemr\",\"Modal__wrapper\":\"styles_Modal__wrapper__V-8KH\"};","import styles from \"./styles.module.scss\";\n\n\n\n\nconst Modal = ({text, isVisibile}) => {\n\n\n\n    return (\n        <>\n\n        { isVisibile && (<div className={styles.Modal}>\n        <div className={styles.Modal__wrapper}>\n        <p className={styles.Modal__text}>{text}</p>\n        </div>\n        </div>) }\n\n        </>\n    )\n}\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nexport default {\"AddMovie\":\"styles_AddMovie__1qqoB\"};","import { useState, useEffect } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport CreateCardForm from \"../../components/CreateCardForm\";\nimport Modal from \"../../components/Modal\"\n\nimport styles from \"./styles.module.scss\";\n\nconst AddMovie = (props) => {\n\n    // console.log(props);\n\n    const [isModalVisibile, setModalVisibility] = useState(false);\n\n    const navigate = useNavigate();\n\n\n    const submitComplete = () => {\n\n        props.addSuccess()\n        \n        navigate(\"/\");\n    };\n\n\n    \n\n    useEffect(() => {\n        setTimeout(() => {\n            setModalVisibility(false);\n        }, 3000);\n    }, [isModalVisibile]);\n        \n\n    return (\n        <div className={styles.AddMovie}>\n            <CreateCardForm completeCallback={submitComplete} setModalVisibility={setModalVisibility} callType=\"POST\" text=\"Add new movie\" />\n\n            <Modal text=\"Added a new movie!\" isVisibile={isModalVisibile} />\n        </div>\n    )\n}\n\n\nexport default AddMovie;","const BASE_URL = \"https://edgemony-backend.herokuapp.com/movies\";\n\n// GET\nconst GET = (id = \"\") => fetch(`${BASE_URL}/${id}`).then((res) => res.json());\n\n// POST\nconst POST = (body) =>\n  fetch(BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n// DELETE\nconst DELETE = (id) => fetch(`${BASE_URL}/${id}`, { method: \"DELETE\" });\n\n// PUT\nconst PUT = (id, body) =>\n  fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\nexport { GET, POST, DELETE, PUT };"],"names":["setModalVisibility","callType","completeCallback","text","movieData","useState","title","setTitle","year","setYear","poster","setPoster","genres","setGenres","description","setDescription","useEffect","genresInArr","Array","isArray","split","movieId","useLocation","pathname","reverse","addMovie","e","preventDefault","POST","PUT","className","styles","onSubmit","htmlFor","value","onChange","target","type","id","name","required","isVisibile","props","isModalVisibile","navigate","useNavigate","setTimeout","CreateCardForm","addSuccess","BASE_URL","GET","fetch","then","res","json","body","method","headers","JSON","stringify","DELETE"],"sourceRoot":""}